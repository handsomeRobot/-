输入: 已经构造的 kd 树；目标点 x；  
输出: x 的 k 个最近邻  
1.	在 kd 树中找出包含目标点 x 的叶结点: 从根节点出发，递归地向下访问 kd 树。若目标点 x 当前维的坐标小于切分点的坐标，则移动到左节点，否则移动到右节点  。直到子节点为叶节点为止。
2.	以此叶节点为 “当前最近点”。    
3.	递归地向上回退，在每个节点进行以下操作：    
a.	如果目标点的最近邻点的集合的长度小于 k，将此节点保存的实例点保存到最近邻点集合中。    
b.	如果目标点的最近邻点的集合长度等于 k，遍历集合找到与目标点距离最远的实例点，将其距离与目前节点保存的实例点与目标点的距离相比较，保存距离更小的实例点，丢弃距离更大的点。  
c.	检查目前子节点的父节点的另一个子节点对应的区域是否与以目前集合中的最大距离为半径，以目标点为球心的超球体相交；如果相交，则移动到另一节点检查其实例点，如果不想交，则退回到父节点。
4.	当回退到根节点时，搜索结束。此时保存的集合为 k 个最近邻点集合。  
